modules = ["python-3.11", "nodejs-20", "postgresql-16"]

[nix]
channel = "stable-24_05"
packages = ["libyaml", "docker", "got"]

[workflows]
runButton = "Project"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "test-deployment-script"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "etf-dashboard"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "client-onboarding"

[[workflows.workflow]]
name = "test-deployment-script"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "chmod +x scripts/deploy.sh && ./scripts/deploy.sh --help"

[[workflows.workflow]]
name = "etf-dashboard"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd etf-dashboard && PORT=5000 npm start"
waitForPort = 5000

[[workflows.workflow]]
name = "client-onboarding"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd client-onboarding && N8N_BASE_URL=https://n8n-app-gvq5.onrender.com N8N_API_KEY=${N8N_API_KEY} PORT=5000 npm start"
waitForPort = 5000

[[ports]]
localPort = 3000
externalPort = 3000

[[ports]]
localPort = 5000
externalPort = 80
